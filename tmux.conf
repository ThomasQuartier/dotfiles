# use ^a instead of ^b as prefix
set -g prefix C-a
unbind-key C-b

# set Zsh as your default Tmux shell
set-option -g default-shell /bin/zsh

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key C-a send-prefix

# get 256 colors to work
set -g default-terminal "screen-256color"

# 40000 lines of history
set-option -g history-limit 40000

# start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# allow for faster key repetition
set -sg escape-time 0

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status-left ""
set -g status-right "#[fg=green]#H"

# enable mouse
# set -g mouse on
# stop printing weird characters
# set -g mouse-utf8 off

# Use Vi style key bindings to move around command line mode
set-option -g status-keys vi
# Use Vi style key bindings to move around copy mode
setw -g mode-keys vi

# Then hit Ctrl+b [ to enter copy mode. Then hit Space followed by whatever vi
# movement keys to make a selection. Then, instead of hitting Enter, hit y and
# the selection will be copied to the clipboard.
# bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'
bind -T copy-mode-vi y send-keys -X copy-pipe 'xclip -in -selection clipboard'


# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Make resizing panes easier
bind-key < resize-pane -L 5
bind-key > resize-pane -R 5
bind-key Up resize-pane -U 5
bind-key Down resize-pane -D 5
# bind-key = select-layout even-vertical
# bind-key | select-layout even-horizontal
